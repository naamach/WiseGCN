#!/usr/bin/env python
import getopt
import argparse
import sys
import os
import requests
from shutil import copyfile
import lxml.etree
from wisegcn.handler import process_gcn


def usage():
    parser = argparse.ArgumentParser(
        description='''Run WiseGCN offline on a specific GW alert, and prepare it for followup observations at the Wise Observatory.'''
    )
    parser.add_argument("-e", "--event", metavar="event_file", help="event name, e.g. S190814bv-5-Update (will download the event from GraceDB)")
    parser.add_argument("-p", "--path", metavar="event_name", help="path to the event file (local or remote)")
    parser.add_argument("-c", "--config", metavar="config_file", help="""path to config.ini file (default: config.ini).\n
                                                                      NOTE: the config file will be copied to the 
                                                                      current directory as "config.ini""""",
                        default="config.ini")
    parser.parse_args()


def main(argv):
    try:
        opts, args = getopt.getopt(argv, "e:p:c:h", ["event=", "path=", "config=", "help"])
    except getopt.GetoptError as err:
        print(err)
        usage()
        sys.exit(2)

    for opt, arg in opts:
        if opt in ("-h", "--help"):
            usage()
            sys.exit(2)
        elif opt in ("-e", "--event"):
            base_url = "https://gracedb.ligo.org/apiweb/superevents/"
            event = arg.split("-")[0]
            url = base_url + event + "/files/" + arg + ".xml"
            r = requests.get(arg)
            payload = r.content
        elif opt in ("-p", "--path"):
            if os.path.isfile(arg):  # local file
                payload = open(arg, 'rb').read()
            else:  # URL
                r = requests.get(arg)
                payload = r.content
        elif opt in ("-c", "--config"):
            # copy the config file to the current directory
            print("Copying the config file to the current folder.")
            copyfile(arg, "config.ini")

    # Listen for GCN notices (until interrupted or killed)
    root = lxml.etree.fromstring(payload)
    process_gcn(payload, root)


if __name__ == '__main__':
    if len(sys.argv) == 1:
        usage()
        sys.exit(2)
    main(sys.argv[1:])
